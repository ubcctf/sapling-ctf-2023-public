from Crypto.Util.number import bytes_to_long as bl, long_to_bytes as lb

N = 0xD8DE56AF310EF49A2B174BC44866EA1B69BAB4BAFAAE2691E2C1DD9EEC3D46BFFDA6D48157880D390EC44FEEA541CE46F811A224C809016AB14A99F5533901060BA9D5262A91EBFA1176A61BAAA4AD899FBC3192EA6A219B316B1F321E9C8BBC96E3E1B707C812D625CA31C87DE6A67D704283C966186E040A640D95B20BB27F

msg1 = b"Baba is you."
msg3 = b"Baba is flag."

sig1 = 0x61207B59B16A5D166D4C8EB031856C2A8D9EE89242E910CCF86DADE0B6627006043C80560D93CED3BD9EDDE75485FA692DD9EBB8CC2F38C6BC1095833AA61B660FC09F7F27020CB80EED0CAC87B5E11BF3449CFA10134EB0E1B34D0E4E9786A68334A4ED6705B0EDF9F8B1D985117564F95C359EE9FB5DCCEDF8C15121F07FB6
"""
You're given msg1^d % N.

You want msg3^d % N.

You can find the value of (msg3/msg1) ^ d % N using the query. Multiply that by the known value msg1^d to get msg3^d
"""


msg2 = bl(msg3) * pow(bl(msg1), -1, N) % N
print(hex(msg2), len(hex(msg2)))  # Send to server; add a leading 0 if the length is odd


sig2 = 0xC66BBEE1AEF6113A24A266AE6416ED43CA921B6F1FF00AC68A013C7384CEACE66D385666AC2BCDCF782C7C8C5120BF508D5D34AFF7E52D70E5262DD94D9FB29090060463EEBFACF1FF7B9FBEEA5C7F615DFF88C5530A9A4B9A35CEEFCE1768A1EDC93BDDA1E383539C371B0FEF8C63C2EE1D1524A0C082A3A7844975A013DE8B
sig3 = sig2 * sig1 % N
print(hex(sig3), len(hex(sig3)))  # Send to server; add a leading 0 if the length is odd
